-----------------------------------------------------------------
| This is a record of problems I encounted with rough solutions |
-----------------------------------------------------------------


Mon 2019 Jun 3
--------------
Problem:
Cannot authenticate you when using curl to POST tickets into zendesk account.

Rough solution:
Activate the API at account settings in agent portal (web interface)


Tue 2019 Jun 4
--------------
Problem:
Trouble using Axios HTTP client and Node.js to access api.

Rough solution:
Use material from the following sites to get the correct syntax.
Axios repo: https://github.com/axios/axios
Axios cheetsheet: https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index

What I learnt was to use syntax like the following:

var instance = axios.create({
  baseURL: 'https://some-domain.com/api/',
  auth: {
    username: 'janedoe',
    password: 's00pers3cret'
  }
});


Problem:
Trouble importing credentials stored in separate files to access api.

Rough solution:
Use material from following Stackoverflow page to fix syntax errors:
https://stackoverflow.com/questions/8595509/how-do-you-share-constants-in-nodejs-modules


Fri to Sun 2019 Jun 7 to 9
--------------------------
Problem:
Creating Commandline interface to receive user input from keyboard. Including commandline based menus.
When experimenting with different solutions, some solutions would:
* Get into infinite loops when using 'readline' and while loops to stay on the same menu
* Only work on main level of the menu, submenus would not work in some solution that use 'process.stdin'
* Quits out of the program after you make a choice in some solutions that use 'process.stdin'
* Show messages more than once so the output is messy when using 'readline'. This also happens when
  inquirer is used.
Code that I wrote that causes the above mentioned problems such as quitting early were adapted from Code
examples from the following sources:
* Example: Tiny CLI from https://nodejs.org/dist/latest-v10.x/docs/api/readline.html#readline_event_sigcont
* process.stdin from https://nodejs.org/dist/latest-v10.x/docs/api/process.html#process_process_stdin
* Use Node JS Process Objectâ€™s Stdin from https://www.dev2qa.com/node-js-get-user-input-from-command-line-prompt-example/
* https://stackoverflow.com/questions/8128578/reading-value-from-console-interactively
* https://stackoverflow.com/questions/32458427/multiple-menus-with-node-js
To see the solutions and code examples that I've tried, see the file playReadline.js

Rough solution:
Using inquirer eliminated the following problems:
* Infinite loops
* Submenu not working
* Qutting program early
Code examples from the following places were modified to suit the needs of this coding challenge:
* https://github.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/examples/input.js
* https://github.com/SBoudrias/Inquirer.js/blob/master/packages/inquirer/examples/hierarchical.js

Tue 2019 Jun 11
---------------
Problem:
If trying to list tickets for a page or get details for a ticket, and you enter a non number input
other than 'back' or 'exit', it will show a large JSON with error instead of the message:
'Please enter a valid ticket ID number, or 'back' to goto main menu, or 'exit' to exit' or
'Please enter a valid page number, or 'back' to goto main menu, or 'exit' to exit'

Rough solution:
Use regular expression to test for numbers if 'back' or 'exit' was not given. If the regex 
(regular expression) fails, show one of the 2 desired error messages from above. If the regex
passes, convert it into an integer then check if it's a valid page or ticket ID number.
The following code:

if (/^[0-9]+$/.test(value)) {
        value = parseInt(value, 10);
    }

from https://code.tutsplus.com/tutorials/testing-in-nodejs--net-35018 was modified for my needs.
